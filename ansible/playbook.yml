- hosts: all
  become: true
  vars:
    repo_dir: /opt/ai-app
  tasks:
    - name: Install prerequisites
      apt:
        name: ["apt-transport-https", "ca-certificates", "curl", "gnupg", "lsb-release"]
        update_cache: yes

    - name: Add Docker GPG key
      ansible.builtin.shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Add Docker repository
      shell: |
        echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu jammy stable" > /etc/apt/sources.list.d/docker.list
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Install Docker
      apt:
        name: ["docker-ce", "docker-ce-cli", "containerd.io", "docker-buildx-plugin", "docker-compose-plugin"]
        update_cache: yes

    - name: Ensure docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create app directory
      file:
        path: "{{ repo_dir }}"
        state: directory

    - name: Login to Docker Hub
      shell: |
        echo "{{ dockerhub_token }}" | docker login --username "{{ dockerhub_username }}" --password-stdin
      register: docker_login_result

    - name: Verify Docker login
      shell: docker info
      register: docker_info
      failed_when: docker_login_result.rc != 0

    - name: Pull Docker images with retry
      shell: |
        cd {{ repo_dir }}
        docker compose pull --ignore-pull-failures
      args:
        chdir: "{{ repo_dir }}"
      retries: 3
      delay: 10
      register: pull_result

    - name: Build images locally if pull fails
      shell: |
        cd {{ repo_dir }}
        docker compose build
      args:
        chdir: "{{ repo_dir }}"
      when: pull_result.rc != 0

    - name: Start application with Docker Compose
      shell: |
        cd {{ repo_dir }}
        docker compose up -d
      args:
        chdir: "{{ repo_dir }}"

